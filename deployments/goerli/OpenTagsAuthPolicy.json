{
  "address": "0x4278bDa062d6b6c2FA68e3B9C0cA022419401216",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "canClaimTag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onTagClaimed",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "tagToRevoke",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tagCanBeRevoked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x747857a769b968b46f318baded8d6ee4dbbb14c2013cdc7ead4a59f82dfb8e18",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xE72285aee8Ad0b545DD6287Aab9EbE8237D4e7Cf",
    "contractAddress": null,
    "transactionIndex": 136,
    "gasUsed": "192930",
    "logsBloom": "0x
    "blockHash": "0xad59cbf5af6200fcde58a14695b4208cb022dcb2b1b96d134246af34db5522cc",
    "transactionHash": "0x747857a769b968b46f318baded8d6ee4dbbb14c2013cdc7ead4a59f82dfb8e18",
    "logs": [],
    "blockNumber": 8582121,
    "cumulativeGasUsed": "27749153",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "290b0ffdff03afb2ef4429b15915ceb0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"canClaimTag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTagClaimed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"tagToRevoke\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tagCanBeRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tagsAuthPolicies/OpenTagsAuthPolicy.sol\":\"OpenTagsAuthPolicy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/tagsAuthPolicies/OpenTagsAuthPolicy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./TagsAuthPolicy.sol\\\";\\n\\ncontract OpenTagsAuthPolicy is TagsAuthPolicy {\\n    function canClaimTag(bytes32, bytes32, address, address, bytes calldata) external virtual override returns (bool) {\\n        return true;\\n    }\\n\\n    function onTagClaimed(\\n        bytes32,\\n        bytes32,\\n        address,\\n        address,\\n        bytes calldata\\n    ) external virtual override returns (bytes32 tagToRevoke) {\\n        return 0;\\n    }\\n\\n    function tagCanBeRevoked(bytes32, bytes32, bytes calldata) external virtual override returns (bool) {\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0xac7a908d23bb8e92714ff3aee3184ee3bf5c656ebe9f4f7a097d39fb66c6e1a3\",\"license\":\"MIT\"},\"contracts/tagsAuthPolicies/TagsAuthPolicy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\n\\nabstract contract TagsAuthPolicy is ERC165 {\\n    function supportsInterface(bytes4 interfaceID) public view virtual override(ERC165) returns (bool) {\\n        return interfaceID == type(TagsAuthPolicy).interfaceId || super.supportsInterface(interfaceID);\\n    }\\n\\n    function canClaimTag(\\n        bytes32 guildHash,\\n        bytes32 tagHash,\\n        address claimant,\\n        address recipient,\\n        bytes calldata extraClaimArgs\\n    ) external virtual returns (bool);\\n\\n    function onTagClaimed(\\n        bytes32 guildHash,\\n        bytes32 tagHash,\\n        address claimant,\\n        address recipient,\\n        bytes calldata extraClaimArgs\\n    ) external virtual returns (bytes32 tagToRevoke);\\n\\n    function tagCanBeRevoked(\\n        bytes32 guildHash,\\n        bytes32 tagHash,\\n        bytes calldata extraRevokeArgs\\n    ) external virtual returns (bool);\\n}\\n\",\"keccak256\":\"0xcbca4bd92ff12c0d3435243691be2dd6e29e6318aeb66b533b919b47cca0dd7f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610285806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780638fcae51d14610079578063c5f23c30146100a1578063f02cbfbb146100b9575b600080fd5b61006461005f36600461010a565b6100d3565b60405190151581526020015b60405180910390f35b6100936100873660046101ad565b60009695505050505050565b604051908152602001610070565b6100646100af366004610225565b6000949350505050565b6100646100c73660046101ad565b60019695505050505050565b60006001600160e01b0319821663bbebaf3160e01b148061010457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561011c57600080fd5b81356001600160e01b03198116811461013457600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461015f57600080fd5b919050565b60008083601f84011261017657600080fd5b50813567ffffffffffffffff81111561018e57600080fd5b6020830191508360208285010111156101a657600080fd5b9250929050565b60008060008060008060a087890312156101c657600080fd5b86359550602087013594506101dd6040880161013b565b93506101eb6060880161013b565b9250608087013567ffffffffffffffff81111561020757600080fd5b61021389828a01610164565b979a9699509497509295939492505050565b6000806000806060858703121561023b57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561026057600080fd5b61026c87828801610164565b9598949750955050505056fea164736f6c6343000811000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780638fcae51d14610079578063c5f23c30146100a1578063f02cbfbb146100b9575b600080fd5b61006461005f36600461010a565b6100d3565b60405190151581526020015b60405180910390f35b6100936100873660046101ad565b60009695505050505050565b604051908152602001610070565b6100646100af366004610225565b6000949350505050565b6100646100c73660046101ad565b60019695505050505050565b60006001600160e01b0319821663bbebaf3160e01b148061010457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561011c57600080fd5b81356001600160e01b03198116811461013457600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461015f57600080fd5b919050565b60008083601f84011261017657600080fd5b50813567ffffffffffffffff81111561018e57600080fd5b6020830191508360208285010111156101a657600080fd5b9250929050565b60008060008060008060a087890312156101c657600080fd5b86359550602087013594506101dd6040880161013b565b93506101eb6060880161013b565b9250608087013567ffffffffffffffff81111561020757600080fd5b61021389828a01610164565b979a9699509497509295939492505050565b6000806000806060858703121561023b57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561026057600080fd5b61026c87828801610164565b9598949750955050505056fea164736f6c6343000811000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
